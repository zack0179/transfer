#!/usr/bin/env python
import argparse
import sys
import time
import numpy as np
from tools.config import load_config, conf
from fitlab.maxlike import ML
from fitlab.mcsamp import MCSAMP
from fitlab.parman import PARMAN
from fitlab.speedtest import SPEEDTEST
from fitlab.resman import RESMAN
    
ap = argparse.ArgumentParser()
ap.add_argument('config', help='config file (e.g. input.py)')
msg =" 0: speedtest"
msg+=" 1: mcsamp-nest"
msg+=" 2: mcsamp-analysis"
msg+=" 3: maxlike-minimize"
msg+=" 4: maxlike-leastsq"
msg+=" 5: maxlike-analysis"
msg+=" 6: simulation json2"
msg+=" 7: bootstrap"
msg+=" 8: hessian"
ap.add_argument('-t','--task',type=int,default=0,help=msg)
args = ap.parse_args()

load_config(args.config)
conf['args']=args
conf['resman']=RESMAN()

if   args.task==0: SPEEDTEST().run()
elif args.task==1: MCSAMP().run()
elif args.task==2: MCSAMP().analysis()
elif args.task==3: ML().run_minimize()
elif args.task==4: ML().run_leastsq()
elif args.task==5: ML().analysis()
elif args.task==6: ML().simulation_json2()
elif args.task==7: ML().bootstrap()
elif args.task==8: ML().hessian()
elif args.task==9: ML().simulation()


